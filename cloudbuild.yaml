# cloudbuild.yaml
#
# This file defines the CI/CD pipeline for the Benefits Assistant Chatbot.
# It's used by Google Cloud Build to test, build, and deploy the application.

steps:
  # 1. Install Dependencies
  # Using a specific image with node and pnpm pre-installed could speed this up.
  - name: 'node:18'
    id: 'Install Dependencies'
    entrypoint: 'npm'
    args: ['install', '-g', 'pnpm', '&&', 'pnpm', 'install', '--frozen-lockfile']

  # 2. Run Tests
  - name: 'node:18'
    id: 'Run Tests'
    entrypoint: 'pnpm'
    args: ['test']

  # 3. Generate environment file for build
  - name: 'node:18'
    id: 'Generate Env File'
    entrypoint: 'node'
    args: ['scripts/generate-env.js']
    secretEnv:
      - NEXT_PUBLIC_FIREBASE_API_KEY
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID
      - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET
      - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID
      - NEXT_PUBLIC_FIREBASE_APP_ID
      - NEXT_PUBLIC_FIREBASE_DATABASE_URL
      - FIREBASE_PROJECT_ID
      - FIREBASE_CLIENT_EMAIL
      - FIREBASE_PRIVATE_KEY
      - GOOGLE_GENERATIVE_AI_API_KEY
      - RESEND_API_KEY

  # 3. Build the Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Docker Image'
    args:
      - 'build'
      - '-t'
      - '${_GCP_REGION}-docker.pkg.dev/$PROJECT_ID/benefits-chatbot/app:latest'
      - '.'
      - '-f'
      - 'Dockerfile'

  # 4. Push the Docker Image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Docker Image'
    args: ['push', '${_GCP_REGION}-docker.pkg.dev/$PROJECT_ID/benefits-chatbot/app:latest']

  # 5. Run Database Migrations Securely
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Run Database Migrations'
    entrypoint: 'bash'
    args: ['./scripts/run-gcp-migrations.sh']
    secretEnv: ['DB_USER', 'DB_PASSWORD', 'DB_NAME']

  # 6. Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy to Cloud Run'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'benefits-chatbot-app'
      - '--image'
      - '${_GCP_REGION}-docker.pkg.dev/$PROJECT_ID/benefits-chatbot/app:latest'
      - '--region'
      - '${_GCP_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--quiet'
      - '--update-secrets=DB_USER=DB_USER:latest,DB_PASSWORD=DB_PASSWORD:latest,DB_NAME=DB_NAME:latest,DB_HOST=DB_HOST:latest,DB_PORT=DB_PORT:latest,GCP_PROJECT=GCP_PROJECT:latest,CLOUD_SQL_INSTANCE=CLOUD_SQL_INSTANCE:latest,VERTEX_AI_MODEL=VERTEX_AI_MODEL:latest,GCS_BUCKET_NAME=GCS_BUCKET_NAME:latest'

# Define which secrets from Secret Manager are available to the build steps
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/DB_USER/versions/latest
      env: 'DB_USER'
    - versionName: projects/$PROJECT_ID/secrets/DB_PASSWORD/versions/latest
      env: 'DB_PASSWORD'
    - versionName: projects/$PROJECT_ID/secrets/DB_NAME/versions/latest
      env: 'DB_NAME'
    - versionName: projects/$PROJECT_ID/secrets/NEXT_PUBLIC_FIREBASE_API_KEY/versions/latest
      env: 'NEXT_PUBLIC_FIREBASE_API_KEY'
    - versionName: projects/$PROJECT_ID/secrets/NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN/versions/latest
      env: 'NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN'
    - versionName: projects/$PROJECT_ID/secrets/NEXT_PUBLIC_FIREBASE_PROJECT_ID/versions/latest
      env: 'NEXT_PUBLIC_FIREBASE_PROJECT_ID'
    - versionName: projects/$PROJECT_ID/secrets/NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET/versions/latest
      env: 'NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET'
    - versionName: projects/$PROJECT_ID/secrets/NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID/versions/latest
      env: 'NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID'
    - versionName: projects/$PROJECT_ID/secrets/NEXT_PUBLIC_FIREBASE_APP_ID/versions/latest
      env: 'NEXT_PUBLIC_FIREBASE_APP_ID'
    - versionName: projects/$PROJECT_ID/secrets/NEXT_PUBLIC_FIREBASE_DATABASE_URL/versions/latest
      env: 'NEXT_PUBLIC_FIREBASE_DATABASE_URL'
    - versionName: projects/$PROJECT_ID/secrets/FIREBASE_PROJECT_ID/versions/latest
      env: 'FIREBASE_PROJECT_ID'
    - versionName: projects/$PROJECT_ID/secrets/FIREBASE_CLIENT_EMAIL/versions/latest
      env: 'FIREBASE_CLIENT_EMAIL'
    - versionName: projects/$PROJECT_ID/secrets/FIREBASE_PRIVATE_KEY/versions/latest
      env: 'FIREBASE_PRIVATE_KEY'
    - versionName: projects/$PROJECT_ID/secrets/GOOGLE_GENERATIVE_AI_API_KEY/versions/latest
      env: 'GOOGLE_GENERATIVE_AI_API_KEY'
    - versionName: projects/$PROJECT_ID/secrets/RESEND_API_KEY/versions/latest
      env: 'RESEND_API_KEY'

substitutions:
  _GCP_REGION: us-central1

# Define the image that will be produced
images:
  - '${_GCP_REGION}-docker.pkg.dev/$PROJECT_ID/benefits-chatbot/app:latest'

artifacts:
  objects:
    location: 'gs://$PROJECT_ID-coverage'
    paths:
      - 'coverage/**'

# Set a timeout for the build
timeout: '1200s'

options:
  logging: CLOUD_LOGGING_ONLY
